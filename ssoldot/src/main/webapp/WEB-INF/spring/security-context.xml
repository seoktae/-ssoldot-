<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/security"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.1.xsd">

	<!-- security:http 엘리먼트는 인증과 인가(권한) 설정 태그  -->
	<!-- auto-config="true" 속성 ?  -->
	<!-- 
	pattern 속성: 권한과 인증이 필요한 페이지를 등록
	access 속성 : 권한을 가진 역활(롤)을 등록 (롤의 이름은 사용자가 정한다.)
	
	 -->
	 <!-- auto-config="true" 속성의 의미는 스프링 시큐리티에서 제공하는 로그인 페이지 사용 설정 -->
	<http use-expressions="true" auto-config="true">
       <form-login 
       				login-page="/member/login"
       				always-use-default-target="false"
       				authentication-success-handler-ref="customLoginSuccessHandler"
       				authentication-failure-url="/member/login?login_error"
       				/>

       <logout
       		logout-url="/logout" 
       		logout-success-url="/"
       		/>
    </http>
    
   	<beans:bean id="customLoginSuccessHandler" class="org.ssoldot.security.CustomLoginSuccessHandler">
    </beans:bean>
    
    <!-- <intercept-url pattern="/board/regist" access="ROLE_USER"/> -->
	<authentication-manager>
     	<authentication-provider>	
			<jdbc-user-service data-source-ref="dataSource" users-by-username-query="select member_id as username, password, ENABLED from member where member_id = ?"
			authorities-by-username-query="select member_id as username, case when member_id='admin' then 'ROLE_ADMIN' else 'ROLE_USER' end  as authority from member where member_id = ?"/>
		</authentication-provider	>	
	</authentication-manager>

	
	<!-- 누가 ROLE_USER / ROLE_ADMIN 역활(롤) -->
	<!-- member 테이블가서 admin(id) -->
	<!-- 메모리상에 가상의 계정을 만들어서 롤 부여해서 테스트 -->
	<!-- 
	<authentication-manager>
     <authentication-provider>
       <user-service>
          <user name="newlec" authorities="ROLE_USER" password="1234"/>
          <user name="admin" authorities="ROLE_ADMIN, ROLE_USER" password="1234"/>
       </user-service>
     </authentication-provider>
   </authentication-manager>
	 -->
	
	 
</beans:beans>

